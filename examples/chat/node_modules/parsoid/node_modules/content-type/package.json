{
  "_args": [
    [
      {
        "raw": "content-type@git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
        "scope": null,
        "escapedName": "content-type",
        "name": "content-type",
        "rawSpec": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
        "spec": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
          "sshUrl": "git+ssh://git@github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
          "httpsUrl": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
          "gitUrl": "git://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
          "shortcut": "github:wikimedia/content-type#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
          "directUrl": "https://raw.githubusercontent.com/wikimedia/content-type/47b2632d0a2ee79a7d67268e2f6621becd95d05b/package.json"
        }
      },
      "C:\\Users\\jehovahsays\\Desktop\\WWW\\hiddenwiki\\examples\\chat\\node_modules\\parsoid"
    ]
  ],
  "_from": "git+https://github.com/wikimedia/content-type.git#master",
  "_id": "content-type@1.0.1",
  "_inCache": true,
  "_location": "/parsoid/content-type",
  "_phantomChildren": {},
  "_requested": {
    "raw": "content-type@git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
    "scope": null,
    "escapedName": "content-type",
    "name": "content-type",
    "rawSpec": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
    "spec": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
      "sshUrl": "git+ssh://git@github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
      "httpsUrl": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
      "gitUrl": "git://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
      "shortcut": "github:wikimedia/content-type#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
      "directUrl": "https://raw.githubusercontent.com/wikimedia/content-type/47b2632d0a2ee79a7d67268e2f6621becd95d05b/package.json"
    }
  },
  "_requiredBy": [
    "/parsoid"
  ],
  "_resolved": "git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
  "_shasum": "8be9c2ab968b1fccca2781382ec97d3e9c05506b",
  "_shrinkwrap": null,
  "_spec": "content-type@git+https://github.com/wikimedia/content-type.git#47b2632d0a2ee79a7d67268e2f6621becd95d05b",
  "_where": "C:\\Users\\jehovahsays\\Desktop\\WWW\\hiddenwiki\\examples\\chat\\node_modules\\parsoid",
  "author": {
    "name": "Douglas Christopher Wilson",
    "email": "doug@somethingdoug.com"
  },
  "bugs": {
    "url": "https://github.com/jshttp/content-type/issues"
  },
  "dependencies": {},
  "description": "Create and parse HTTP Content-Type header",
  "devDependencies": {
    "istanbul": "0.3.5",
    "mocha": "~1.21.5"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "gitHead": "47b2632d0a2ee79a7d67268e2f6621becd95d05b",
  "homepage": "https://github.com/jshttp/content-type#readme",
  "keywords": [
    "content-type",
    "http",
    "req",
    "res",
    "rfc7231"
  ],
  "license": "MIT",
  "name": "content-type",
  "optionalDependencies": {},
  "readme": "# content-type\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nCreate and parse HTTP Content-Type header according to RFC 7231\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install content-type\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar contentType = require('content-type')\r\n```\r\n\r\n### contentType.parse(string)\r\n\r\n```js\r\nvar obj = contentType.parse('image/svg+xml; charset=utf-8')\r\n```\r\n\r\nParse a content type string. This will return an object with the following\r\nproperties (examples are shown for the string `'image/svg+xml; charset=utf-8'`):\r\n\r\n - `type`: The media type (the type and subtype, always lower case).\r\n   Example: `'image/svg+xml'`\r\n\r\n - `parameters`: An object of the parameters in the media type (name of parameter\r\n   always lower case). Example: `{charset: 'utf-8'}`\r\n\r\nThrows a `TypeError` if the string is missing or invalid.\r\n\r\n### contentType.parse(req)\r\n\r\n```js\r\nvar obj = contentType.parse(req)\r\n```\r\n\r\nParse the `content-type` header from the given `req`. Short-cut for\r\n`contentType.parse(req.headers['content-type'])`.\r\n\r\nThrows a `TypeError` if the `Content-Type` header is missing or invalid.\r\n\r\n### contentType.parse(res)\r\n\r\n```js\r\nvar obj = contentType.parse(res)\r\n```\r\n\r\nParse the `content-type` header set on the given `res`. Short-cut for\r\n`contentType.parse(res.getHeader('content-type'))`.\r\n\r\nThrows a `TypeError` if the `Content-Type` header is missing or invalid.\r\n\r\n### contentType.format(obj)\r\n\r\n```js\r\nvar str = contentType.format({type: 'image/svg+xml'})\r\n```\r\n\r\nFormat an object into a content type string. This will return a string of the\r\ncontent type for the given object with the following properties (examples are\r\nshown that produce the string `'image/svg+xml; charset=utf-8'`):\r\n\r\n - `type`: The media type (will be lower-cased). Example: `'image/svg+xml'`\r\n\r\n - `parameters`: An object of the parameters in the media type (name of the\r\n   parameter will be lower-cased). Example: `{charset: 'utf-8'}`\r\n\r\nThrows a `TypeError` if the object contains an invalid type or parameter names.\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/content-type.svg\r\n[npm-url]: https://npmjs.org/package/content-type\r\n[node-version-image]: https://img.shields.io/node/v/content-type.svg\r\n[node-version-url]: http://nodejs.org/download/\r\n[travis-image]: https://img.shields.io/travis/jshttp/content-type/master.svg\r\n[travis-url]: https://travis-ci.org/jshttp/content-type\r\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/content-type/master.svg\r\n[coveralls-url]: https://coveralls.io/r/jshttp/content-type\r\n[downloads-image]: https://img.shields.io/npm/dm/content-type.svg\r\n[downloads-url]: https://npmjs.org/package/content-type\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/content-type.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-ci": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/"
  },
  "version": "1.0.1"
}
