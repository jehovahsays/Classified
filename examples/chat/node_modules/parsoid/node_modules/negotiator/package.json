{
  "_args": [
    [
      {
        "raw": "negotiator@git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
        "scope": null,
        "escapedName": "negotiator",
        "name": "negotiator",
        "rawSpec": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
        "spec": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
          "sshUrl": "git+ssh://git@github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
          "httpsUrl": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
          "gitUrl": "git://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
          "shortcut": "github:arlolra/negotiator#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
          "directUrl": "https://raw.githubusercontent.com/arlolra/negotiator/0418ab4e9a665772b7e233564a4525c9d9a8ec3a/package.json"
        }
      },
      "C:\\socket.io\\examples\\chat\\node_modules\\parsoid"
    ]
  ],
  "_from": "git+https://github.com/arlolra/negotiator.git#full-parse-access",
  "_id": "negotiator@0.6.1",
  "_inCache": true,
  "_location": "/parsoid/negotiator",
  "_phantomChildren": {},
  "_requested": {
    "raw": "negotiator@git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
    "scope": null,
    "escapedName": "negotiator",
    "name": "negotiator",
    "rawSpec": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
    "spec": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
      "sshUrl": "git+ssh://git@github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
      "httpsUrl": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
      "gitUrl": "git://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
      "shortcut": "github:arlolra/negotiator#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
      "directUrl": "https://raw.githubusercontent.com/arlolra/negotiator/0418ab4e9a665772b7e233564a4525c9d9a8ec3a/package.json"
    }
  },
  "_requiredBy": [
    "/parsoid",
    "/parsoid/accepts"
  ],
  "_resolved": "git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
  "_shasum": "e3d7c25e79a4c273d6e8556a3012d3c23ad03edf",
  "_shrinkwrap": null,
  "_spec": "negotiator@git+https://github.com/arlolra/negotiator.git#0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
  "_where": "C:\\socket.io\\examples\\chat\\node_modules\\parsoid",
  "bugs": {
    "url": "https://github.com/jshttp/negotiator/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Federico Romero",
      "email": "federico.romero@outboxlabs.com"
    },
    {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "http://blog.izs.me/"
    }
  ],
  "dependencies": {},
  "description": "HTTP content negotiation",
  "devDependencies": {
    "istanbul": "0.4.3",
    "mocha": "~1.21.5"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "lib/",
    "HISTORY.md",
    "LICENSE",
    "index.js",
    "README.md"
  ],
  "gitHead": "0418ab4e9a665772b7e233564a4525c9d9a8ec3a",
  "homepage": "https://github.com/jshttp/negotiator#readme",
  "keywords": [
    "http",
    "content negotiation",
    "accept",
    "accept-language",
    "accept-encoding",
    "accept-charset"
  ],
  "license": "MIT",
  "name": "negotiator",
  "optionalDependencies": {},
  "readme": "# negotiator\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nAn HTTP content negotiator for Node.js\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install negotiator\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar Negotiator = require('negotiator')\r\n```\r\n\r\n### Accept Negotiation\r\n\r\n```js\r\navailableMediaTypes = ['text/html', 'text/plain', 'application/json']\r\n\r\n// The negotiator constructor receives a request object\r\nnegotiator = new Negotiator(request)\r\n\r\n// Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8'\r\n\r\nnegotiator.mediaTypes()\r\n// -> ['text/html', 'image/jpeg', 'application/*']\r\n\r\nnegotiator.mediaTypes(availableMediaTypes)\r\n// -> ['text/html', 'application/json']\r\n\r\nnegotiator.mediaType(availableMediaTypes)\r\n// -> 'text/html'\r\n```\r\n\r\nYou can check a working example at `examples/accept.js`.\r\n\r\n#### Methods\r\n\r\n##### mediaType()\r\n\r\nReturns the most preferred media type from the client.\r\n\r\n##### mediaType(availableMediaType)\r\n\r\nReturns the most preferred media type from a list of available media types.\r\n\r\n##### mediaTypes()\r\n\r\nReturns an array of preferred media types ordered by the client preference.\r\n\r\n##### mediaTypes(availableMediaTypes)\r\n\r\nReturns an array of preferred media types ordered by priority from a list of\r\navailable media types.\r\n\r\n### Accept-Language Negotiation\r\n\r\n```js\r\nnegotiator = new Negotiator(request)\r\n\r\navailableLanguages = ['en', 'es', 'fr']\r\n\r\n// Let's say Accept-Language header is 'en;q=0.8, es, pt'\r\n\r\nnegotiator.languages()\r\n// -> ['es', 'pt', 'en']\r\n\r\nnegotiator.languages(availableLanguages)\r\n// -> ['es', 'en']\r\n\r\nlanguage = negotiator.language(availableLanguages)\r\n// -> 'es'\r\n```\r\n\r\nYou can check a working example at `examples/language.js`.\r\n\r\n#### Methods\r\n\r\n##### language()\r\n\r\nReturns the most preferred language from the client.\r\n\r\n##### language(availableLanguages)\r\n\r\nReturns the most preferred language from a list of available languages.\r\n\r\n##### languages()\r\n\r\nReturns an array of preferred languages ordered by the client preference.\r\n\r\n##### languages(availableLanguages)\r\n\r\nReturns an array of preferred languages ordered by priority from a list of\r\navailable languages.\r\n\r\n### Accept-Charset Negotiation\r\n\r\n```js\r\navailableCharsets = ['utf-8', 'iso-8859-1', 'iso-8859-5']\r\n\r\nnegotiator = new Negotiator(request)\r\n\r\n// Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2'\r\n\r\nnegotiator.charsets()\r\n// -> ['utf-8', 'iso-8859-1', 'utf-7']\r\n\r\nnegotiator.charsets(availableCharsets)\r\n// -> ['utf-8', 'iso-8859-1']\r\n\r\nnegotiator.charset(availableCharsets)\r\n// -> 'utf-8'\r\n```\r\n\r\nYou can check a working example at `examples/charset.js`.\r\n\r\n#### Methods\r\n\r\n##### charset()\r\n\r\nReturns the most preferred charset from the client.\r\n\r\n##### charset(availableCharsets)\r\n\r\nReturns the most preferred charset from a list of available charsets.\r\n\r\n##### charsets()\r\n\r\nReturns an array of preferred charsets ordered by the client preference.\r\n\r\n##### charsets(availableCharsets)\r\n\r\nReturns an array of preferred charsets ordered by priority from a list of\r\navailable charsets.\r\n\r\n### Accept-Encoding Negotiation\r\n\r\n```js\r\navailableEncodings = ['identity', 'gzip']\r\n\r\nnegotiator = new Negotiator(request)\r\n\r\n// Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5'\r\n\r\nnegotiator.encodings()\r\n// -> ['gzip', 'identity', 'compress']\r\n\r\nnegotiator.encodings(availableEncodings)\r\n// -> ['gzip', 'identity']\r\n\r\nnegotiator.encoding(availableEncodings)\r\n// -> 'gzip'\r\n```\r\n\r\nYou can check a working example at `examples/encoding.js`.\r\n\r\n#### Methods\r\n\r\n##### encoding()\r\n\r\nReturns the most preferred encoding from the client.\r\n\r\n##### encoding(availableEncodings)\r\n\r\nReturns the most preferred encoding from a list of available encodings.\r\n\r\n##### encodings()\r\n\r\nReturns an array of preferred encodings ordered by the client preference.\r\n\r\n##### encodings(availableEncodings)\r\n\r\nReturns an array of preferred encodings ordered by priority from a list of\r\navailable encodings.\r\n\r\n## See Also\r\n\r\nThe [accepts](https://npmjs.org/package/accepts#readme) module builds on\r\nthis module and provides an alternative interface, mime type validation,\r\nand more.\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/negotiator.svg\r\n[npm-url]: https://npmjs.org/package/negotiator\r\n[node-version-image]: https://img.shields.io/node/v/negotiator.svg\r\n[node-version-url]: https://nodejs.org/en/download/\r\n[travis-image]: https://img.shields.io/travis/jshttp/negotiator/master.svg\r\n[travis-url]: https://travis-ci.org/jshttp/negotiator\r\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/negotiator/master.svg\r\n[coveralls-url]: https://coveralls.io/r/jshttp/negotiator?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/negotiator.svg\r\n[downloads-url]: https://npmjs.org/package/negotiator\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/negotiator.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --check-leaks --bail test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  },
  "version": "0.6.1"
}
