{
  "_args": [
    [
      {
        "raw": "limitation@^0.2.0",
        "scope": null,
        "escapedName": "limitation",
        "name": "limitation",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "C:\\socket.io\\examples\\chat\\node_modules\\service-runner"
    ]
  ],
  "_from": "limitation@>=0.2.0 <0.3.0",
  "_id": "limitation@0.2.0",
  "_inCache": true,
  "_location": "/limitation",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/limitation-0.2.0.tgz_1487290937180_0.002941834507510066"
  },
  "_npmUser": {
    "name": "gwicke",
    "email": "gabriel@gwicke.net"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "limitation@^0.2.0",
    "scope": null,
    "escapedName": "limitation",
    "name": "limitation",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/service-runner"
  ],
  "_resolved": "http://registry.npmjs.org/limitation/-/limitation-0.2.0.tgz",
  "_shasum": "70ce102a972a0b79d4ca13a3ab62b8e6fe682a62",
  "_shrinkwrap": null,
  "_spec": "limitation@^0.2.0",
  "_where": "C:\\socket.io\\examples\\chat\\node_modules\\service-runner",
  "author": {
    "name": "Gabriel Wicke",
    "email": "gwicke@wikimedia.org"
  },
  "bugs": {
    "url": "https://github.com/gwicke/limitation/issues"
  },
  "dependencies": {
    "bluebird": "^3.3.1",
    "kad": "git+https://github.com/gwicke/kad.git#master",
    "readable-stream": "^2.0.5"
  },
  "description": "An efficient rate limiter with several backend, including a Kademlia DHT.",
  "devDependencies": {
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "70ce102a972a0b79d4ca13a3ab62b8e6fe682a62",
    "tarball": "https://registry.npmjs.org/limitation/-/limitation-0.2.0.tgz"
  },
  "gitHead": "d175009b7d2537a27b043d6f98d1f5633ef14024",
  "homepage": "https://github.com/gwicke/limitation#readme",
  "keywords": [
    "ratelimit",
    "rate",
    "limit",
    "dht",
    "kademlia"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "gwicke",
      "email": "gabriel@gwicke.net"
    },
    {
      "name": "pchelolo",
      "email": "petrpchelko@gmail.com"
    }
  ],
  "name": "limitation",
  "optionalDependencies": {},
  "readme": "# Limitation\n\nAn efficient rate limiter with several backends, including a Kademlia DHT.\n\n## Features\n\n- Fully synchronous local limit checking for lowest latency and high\n    throughput. Using node 4.3 on a single core, a throughput of about 8\n    million limit checks per second is typical.\n- Backends scale constant in number of requests, and linear in number\n    of keys. Tested with thousands of distinct limits.\n- Backends:\n    - Resilient Kademlia DHT storage backend using an exponentially decaying\n      counter.\n    - Simple and very fast local in-memory storage backend.\n\n## Installation\n```bash\nnpm install limitation\n```\n\n## Usage\n\nSimple in-memory backend:\n\n```javascript\nvar Limitation = require('limitation');\n\nvar ratelimiter = new Limitation();\n\nif (ratelimiter.isAboveLimit('some_key', 10)) {\n  console.log('Limit of 10 req/s exceeded!');\n}\n```\n\nKademlia backend:\n```javascript\nvar Limitation = require('limitation');\n\nvar ratelimiter = new Limitation({\n    seeds: [{\n        address: 'localhost',\n        port: 3050\n    },\n    // Host names are also supported, expands to some.host:3050\n    'some.host'],\n\n    // Optional parameters\n    // Address / port to listen on\n    // Default: localhost:3050, random port fall-back if port used\n    listen: {\n        address: '127.0.0.1',\n        port: 3050\n    },\n    // Counter update / block interval; Default: 10000ms\n    // Shorter interval means quicker limiting, but also higher load.\n    interval: 10000\n});\n\n// Returns Promise<Limitation>\nratelimiter.setup();\n\nif (ratelimiter.isAboveLimit('some_key', 10)) {\n  console.log('Limit of 10 req/s exceeded!');\n}\n```\n\n// Clears any set timers so the process can exit cleanly.\nratelimiter.stop()\n\nSee also [test/index.js](test/index.js) for a runnable Kademlia example. It\nstarts multiple DHT nodes, and you can start multiple copies of the script to\nplay with nodes going down etc.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gwicke/limitation.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.2.0"
}
